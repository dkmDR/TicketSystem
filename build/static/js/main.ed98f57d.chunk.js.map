{"version":3,"sources":["api/Path.js","api/Requestor.js","components/Layout/Menu.js","components/Dashboard/Ticket.js","form/Validation.js","components/Dashboard/CreateTicket.js","components/Dashboard/Employee.js","components/Dashboard/Employees.js","components/Dashboard/Report.js","components/Dashboard/ViewEmployee.js","components/Dashboard/TicketInfoHead.js","components/Dashboard/TIcketInfoFoot.js","components/Dashboard/TicketView.js","components/Dashboard/TimeEntry.js","router/Routes.js","components/Entry/Login.js","components/Dashboard/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["partner","employee","searchEmployees","searchEmployee","remove","options","logIn","validSessionId","closeSession","miscellaneous","ticket","create","search","get","getInfo","employees","removeAssigned","employeeOptions","createEntry","entries","removeEntry","report","request","json","path","method","fetch","process","headers","Content-Type","body","JSON","stringify","value","Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","redirect","logOut","bind","assertThisInitialized","_this2","params","sessionStorage","getItem","then","response","data","setItem","undefined","setState","catch","error","console","log","_this3","react_default","a","createElement","react_router","to","tab","tab1","tab2","tab3","select","className","type","onClick","e","key","react_router_dom","Component","Ticket","ticketId","window","confirm","param","status","tickets","alert","message","view","redirectToView","update","updating","redirectToTimeEntry","searchTickets","_this$state","newTicket","ref","location","newRecord","pathname","Layout_Menu","role","map","element","index","id","subject","ticket_description","assigned","ticket_date","status_des","created_on","created_by","status_id","title","empty","length","CreateTicket","change","target","defineProperty","res","assignedInfo","ticket_id","description","employeesStateLabel","label","employeesSelected","ticket_note","sendRequest","errorMessage","messageLabel","subjectState","subjectStateLabel","dateState","dateStateLabel","statusStateLabel","descriptionState","descriptionStateLabel","searchStatus","_this4","validation","sessionId","_this$state2","_this5","_this$state3","concat","placeholder","onChange","DateTime_default","inputProps","dateFormat","react_select_esm","classNamePrefix","object","closeMenuOnSelect","isMulti","rows","Employee","employee_id","first_name","last_name","password","confirmPassword","email","userName","user_name","firstNameState","firstNameStateLabel","lastNameState","lastNameStateLabel","emailState","emailStateLabel","userNameState","userNameStateLabel","passwordState","passwordStateLabel","passwordMatch","save","validated","test","Employees","edit","employeeId","editEmployee","viewEmployee","newEmployee","Report","date_from","date_to","totalHour","timeFormat","parseInt","hour_diff","employee_name","note","colSpan","ViewEmployee","TicketInfoHead","ticketInfo","ticket_date_format","TicketInfoFoot","event","preventDefault","showTab","removeEmployee","assignId","searchEntries","data-toggle","href","aria-controls","aria-selected","aria-labelledby","TicketView","redirectToEdit","Dashboard_TicketInfoHead","TIcketInfoFoot","TimeEntry","routes","component","Login","NotFound","class","App","i","exact","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed98f57d.chunk.js","sourcesContent":["export const partner = {\r\n    employee : \"save-employee\",\r\n    searchEmployees : \"get-employees\",\r\n    searchEmployee : \"get-employee\",\r\n    remove: \"remove-employee\",\r\n    options: \"get-employee-options\",\r\n    logIn : \"log-in\",\r\n    validSessionId : \"valid-session-id\",\r\n    closeSession : \"close-session\"\r\n}\r\nexport const miscellaneous = {\r\n    status : \"search-status\",\r\n    state : \"search-state\"\r\n}\r\nexport const ticket = {\r\n    create : \"create-ticket\",\r\n    remove : \"remove-ticket\",\r\n    search : \"search-tickets\",\r\n    get : \"get-ticket\",\r\n    getInfo : \"get-ticket-info\",\r\n    employees : \"get-employees-by-ticket\",\r\n    removeAssigned : \"remove-assign-ticket\",\r\n    employeeOptions : \"get-employees-by-ticket-options\",\r\n    createEntry : \"create-entry\",\r\n    entries : \"get-ticket-entries\",\r\n    removeEntry : \"remove-entry\"\r\n}\r\n\r\nexport const report = {\r\n    entries : \"get-entries-by-date\"\r\n}","/** POST */\r\nexport function request( json, path, method ) {\r\n    method = typeof method !== \"undefined\" ? method : \"POST\";\r\n    return fetch(\r\n        process.env.REACT_APP_API_PATH + path,\r\n        {\r\n            method : method,\r\n            headers : { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify( json )\r\n        }\r\n    )\r\n}\r\n/** GET */\r\nexport function get( path, value ){\r\n    if ( typeof value !== \"undefined\" )\r\n        return fetch( process.env.REACT_APP_API_PATH + path + value );\r\n\r\n    return fetch( process.env.REACT_APP_API_PATH + path );\r\n}\r\n/** PUT, DELETE */\r\nexport function exec( path, value ){\r\n    if ( typeof value !== \"undefined\" )\r\n        return fetch( process.env.REACT_APP_API_PATH + path + value );\r\n\r\n    return fetch( process.env.REACT_APP_API_PATH + path );\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { partner } from '../../api/Path';\r\nimport { get } from '../../api/Requestor';\r\n\r\nclass Menu extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            redirect : false\r\n        }\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n    /** log out... */\r\n    logOut(){\r\n        let sessionId = sessionStorage.getItem(\"sessionId\"),\r\n            params = \"?sessionid=\"+sessionId;\r\n        get(partner.closeSession, params)\r\n            .then(response => response.json())\r\n            .then(data => {                \r\n                sessionStorage.setItem(\"sessionId\", undefined);\r\n                this.setState({redirect : true});\r\n            })\r\n            .catch(error=>{\r\n                console.log(\"Error...\");\r\n                console.log(error);\r\n            });        \r\n    }\r\n    /** rendering... */\r\n    render(){\r\n        let sessionId = sessionStorage.getItem(\"sessionId\");        \r\n        if ( sessionId === 'undefined' ) {\r\n            return <Redirect to='/' />\r\n        }\r\n        let selected = this.props.select;\r\n        let tab = \"nav-link\",\r\n            tab1 = tab,\r\n            tab2 = tab,\r\n            tab3 = tab;\r\n        switch(selected){\r\n            case \"ticket\":\r\n                tab1 += \" active\";\r\n                break;\r\n            case \"employee\":\r\n                tab2 += \" active\";\r\n                break;\r\n            case \"reports\":\r\n                tab3 += \" active\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return (\r\n            <div className=\"container-fluid containers\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <button type=\"button\" onClick={e=>this.logOut()} className=\"btn btn-light float-right\">Log out</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <ul className=\"nav nav-pills\">\r\n                            <li className=\"nav-item\" key={1}>                            \r\n                                <Link to=\"/ticket/list\" className={tab1}>Tickets <i className=\"fa fa-ticket\"></i></Link>\r\n                            </li>\r\n                            <li className=\"nav-item\" key={2}>\r\n                                <Link to=\"/employee/list\" className={tab2}>Employees <i className=\"fa fa-users\"></i></Link>\r\n                            </li>\r\n                            <li className=\"nav-item\" key={3}>\r\n                                <Link to=\"/report\" className={tab3}>Reports <i className=\"fa fa-file-text-o\"></i></Link>\r\n                            </li>                            \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport Menu from '../Layout/Menu';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { ticket } from '../../api/Path';\r\nimport { get } from '../../api/Requestor';\r\n\r\nclass Ticket extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tickets : [],\r\n            ticketId : 0,\r\n            redirectToView : false,\r\n            updating : false,\r\n            redirectToTimeEntry : false\r\n        }\r\n        this.searchTickets = this.searchTickets.bind(this);\r\n    }\r\n    /** search tickets */\r\n    searchTickets(){\r\n        get(ticket.search)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if ( data != null )\r\n                this.setState({tickets : data});\r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error...\");\r\n            console.log(error);\r\n            window.alert(\"Internal error, please call the administrator\");\r\n        });\r\n    }\r\n    /** remove ticket */\r\n    remove = ticketId =>{\r\n        let confirm = window.confirm(\"are you sure?\");\r\n        if ( confirm ){\r\n            let param = \"?ticket=\" + ticketId;\r\n            get(ticket.remove,param)\r\n            .then(response=>response.json())\r\n            .then(data=>{\r\n                if( data != null){\r\n                    if ( data.status )\r\n                        this.setState({tickets:data.tickets});\r\n                    else\r\n                        window.alert(data.message);\r\n                } else {\r\n                    window.alert(\"Response does not found\");\r\n                }\r\n            })\r\n            .catch(error=>{\r\n                console.log(error);\r\n                window.alert(\"Internal Error, please call the administrator\");\r\n            })\r\n        }\r\n    }\r\n    /** view info ticket */\r\n    view = ticket => {\r\n        this.setState({ticketId : ticket, redirectToView : true});\r\n    }\r\n    /** show info ticket for update */\r\n    update = ticket => {\r\n        this.setState({ticketId : ticket, redirectToView : true, updating : true});\r\n    }\r\n    /** show entries interfaec */\r\n    entries = ticket => {\r\n        this.setState({ticketId : ticket, redirectToTimeEntry : true});\r\n    }\r\n    /** before rendering... */\r\n    componentDidMount(){\r\n        this.searchTickets();\r\n    }\r\n    /** rendering... */\r\n    render(){ \r\n        let \r\n            { \r\n                tickets,\r\n                ticketId,\r\n                redirectToView,\r\n                updating,\r\n                redirectToTimeEntry\r\n            } = this.state,\r\n            newTicket = false,\r\n            ref = this;\r\n        if ( this.props.location.state !== undefined ) \r\n            newTicket = this.props.location.state.newRecord;       \r\n        if ( redirectToView ) {\r\n            return <Redirect to={{\r\n                pathname : \"/ticket/view\",\r\n                state : {ticket : ticketId, updating : updating }\r\n            }} />\r\n        }\r\n        if ( redirectToTimeEntry ) {\r\n            return <Redirect to={{\r\n                pathname : \"/ticket/entries\",\r\n                state : {ticket : ticketId }\r\n            }} />\r\n        }\r\n        return [\r\n                <Menu select=\"ticket\" key={1} />,\r\n                <div className=\"container-fluid\" key={2}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                List of Tickets\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            {\r\n                                                ( newTicket ) ? <div className=\"alert alert-success\" role=\"alert\">New Ticket has been created!</div> : \"\"\r\n                                            }                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <Link to=\"/ticket\" className=\"btn btn-primary buttons float-right\"><i className=\"fa fa-plus\"></i> Create Ticket</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col table-responsive\">\r\n                                            <table className=\"table table-condensed table-bordered\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Subject</th>\r\n                                                        <th>Description</th>\r\n                                                        <th>Assigned(s)</th>\r\n                                                        <th>Date</th>\r\n                                                        <th>Status</th>\r\n                                                        <th>Created on</th>\r\n                                                        <th>Created by</th>\r\n                                                        <th>Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        tickets.map(function(element,index){\r\n                                                            return (\r\n                                                                <tr key={index}>\r\n                                                                    <td>{element.id}</td>\r\n                                                                    <td>{element.subject}</td>\r\n                                                                    <td>{element.ticket_description}</td>\r\n                                                                    <td>{element.assigned}</td>\r\n                                                                    <td>{element.ticket_date}</td>\r\n                                                                    <td>{element.status_des}</td>\r\n                                                                    <td>{element.created_on}</td>\r\n                                                                    <td>{element.created_by}</td>\r\n                                                                    <td>\r\n                                                                        {\r\n                                                                            element.status_id != 2 ?\r\n                                                                            <div>\r\n                                                                                <i className=\"fa fa-sticky-note-o actionIcon\" title=\"Add Node & Time Entry\" onClick={e=>ref.entries(element.id)}></i>                                                                                \r\n                                                                                <i className=\"fa fa-pencil-square-o actionIcon\" title=\"Edit Ticket\" onClick={e=>ref.update(element.id)}></i>\r\n                                                                                <i className=\"fa fa-trash actionIcon\" title=\"Remove Ticket\" onClick={e=>ref.remove(element.id)}></i>\r\n                                                                            </div>\r\n                                                                            : \"\"\r\n                                                                        }\r\n                                                                        <i className=\"fa fa-eye actionIcon\" title=\"View Ticket\" onClick={e=>ref.view(element.id)}></i>\r\n                                                                    </td>                                                                \r\n                                                                </tr>\r\n                                                            )\r\n                                                        })                                                        \r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>                                \r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ];\r\n    }\r\n}\r\n\r\nexport default Ticket;","// function that returns true if value is email, false otherwise\r\nexport function verifyEmail(value){\r\n    var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (emailRex.test(value)) {\r\n      return true;\r\n    }\r\n    return false;\r\n}\r\n// function that verifies if a string has a given length or not\r\nexport function verifyLength(value, length) {\r\n    if (value.length >= length) {\r\n      return true;\r\n    }\r\n    return false;\r\n}\r\n// function that verifies if two strings are equal\r\nexport function compare(string1, string2) {\r\n    if (string1 === string2) {\r\n      return true;\r\n    }\r\n    return false;\r\n}\r\n// function that verifies if value contains only numbers\r\nexport function verifyNumber(value) {\r\n    var numberRex = new RegExp(\"^[0-9]+$\");\r\n    if (numberRex.test(value)) {\r\n      return true;\r\n    }\r\n    return false;\r\n}\r\n// verifies if value is a valid URL\r\nexport function verifyUrl(value) {\r\n    try {\r\n      new URL(value);\r\n      return true;\r\n    } catch (_) {\r\n      return false;\r\n    }\r\n}\r\n// verify if empty\r\nexport function empty(value){\r\n  if (value.length > 0) {\r\n    return false;\r\n  }\r\n  return true;\r\n}","import React, { Component } from 'react';\r\nimport Menu from '../Layout/Menu';\r\nimport DateTime from 'react-datetime';\r\nimport Select from 'react-select';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { partner, miscellaneous, ticket } from '../../api/Path';\r\nimport { request, get } from '../../api/Requestor';\r\nimport { empty } from '../../form/Validation';\r\n/*import moment from 'moment';*/\r\n\r\nclass CreateTicket extends Component {    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            ticket_id : 0,\r\n            ticket_date : \"\",\r\n            subject : \"\",\r\n            status_id : 0,\r\n            status_des : \"\",\r\n            ticket_description : \"\",\r\n            ticket_note : \"\",\r\n            status : [],\r\n            employees : [],\r\n            employeesSelected : null,\r\n            sendRequest : false,\r\n            errorMessage : false,\r\n            messageLabel : \"\",\r\n            subjectState : \"\",\r\n            subjectStateLabel : \"Enter a subject ticket\",\r\n            dateState : \"\",\r\n            dateStateLabel : \"Due date ticket\",\r\n            statusStateLabel : \"Select a status...\",\r\n            employeesStateLabel : \"Select Employee(s)\",\r\n            descriptionState : \"\",\r\n            descriptionStateLabel : \"\"\r\n        }\r\n        this.searchEmployees = this.searchEmployees.bind(this);\r\n        this.searchStatus = this.searchStatus.bind(this);\r\n        this.create = this.create.bind(this);\r\n    }    \r\n    /** assign values */\r\n    change = element => {\r\n        let key = element.target.id;\r\n        let value = element.target.value;\r\n        this.setState({ [key] : value });\r\n    }\r\n    /** search statuses */\r\n    searchStatus(){\r\n        get(miscellaneous.state)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({status : data});\r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error...\");\r\n            console.log(error);\r\n        });\r\n    }    \r\n    /** search all employees that not removed */\r\n    searchEmployees(){\r\n        get(partner.options)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if ( data != null )\r\n                this.setState({employees : data});\r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error...\");\r\n            console.log(error);\r\n        });\r\n    }\r\n    /** search */\r\n    search = ticketId => {\r\n        let params = \"?ticket=\"+ticketId;\r\n        get(ticket.getInfo,params)\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            if ( res != null ){\r\n                let data = res.ticket,\r\n                assignedInfo = res.assigned;                                \r\n                this.setState({\r\n                    ticket_id : data.id,\r\n                    subject : data.subject,\r\n                    ticket_date : data.ticket_date,\r\n                    ticket_description : data.description,\r\n                    status_id : data.status_id,\r\n                    status_des : data.status_des,\r\n                    employeesStateLabel : assignedInfo.label,\r\n                    employeesSelected : res.employees\r\n                    });\r\n            } else {\r\n                window.alert(\"Response does not found\");\r\n            }\r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error...\");\r\n            console.log(error);\r\n        });\r\n    }\r\n    /** create ticket */\r\n    create(){\r\n        let {\r\n            ticket_id,\r\n            subject,  \r\n            ticket_date,\r\n            status_id,\r\n            ticket_description,\r\n            employeesSelected   \r\n        } = this.state\r\n        let validation = this.validation();\r\n        if ( validation ) {\r\n            let object = {\r\n                ticket_id : ticket_id,\r\n                subject : subject,\r\n                ticket_date : ticket_date,\r\n                status_id : status_id,\r\n                ticket_description : ticket_description,\r\n                employees : employeesSelected,\r\n                sessionId : sessionStorage.getItem(\"sessionId\")\r\n            }\r\n            request(object, ticket.create)\r\n            .then(response => response.json())\r\n            .then(data => {    \r\n                if ( data.status ) {\r\n                    this.setState({redirect : true});\r\n                } else {\r\n                    this.setState({sendRequest : false, errorMessage: true, messageLabel : data.message });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error...\");\r\n                console.log(error);\r\n                this.setState({sendRequest : false, errorMessage: true, messageLabel : \"Internal Error, please call the administrator\" });\r\n            });\r\n        }\r\n    }\r\n    /** validation... */\r\n    validation(){\r\n        let {\r\n            subject,  \r\n            ticket_date,\r\n            status_id,\r\n            ticket_description,\r\n            employeesSelected   \r\n        } = this.state\r\n        if ( empty(subject) ) {\r\n            this.setState({subjectState : \"required\", subjectStateLabel : \"Enter a valid subject\"});\r\n            return false;\r\n        }\r\n        this.setState({subjectState : \"\", subjectStateLabel : \"\"});\r\n        if ( ticket_date.length !== undefined ) {\r\n            this.setState({dateState: \"required\", dateStateLabel: \"Enter a valid date\"});\r\n            return false;\r\n        }\r\n        this.setState({dateState: \"\", dateStateLabel: \"\"});\r\n        if ( status_id < 1 ) {\r\n            this.setState({statusStateLabel: \"Select at least one status\"});\r\n            return false;\r\n        }        \r\n        this.setState({statusStateLabel: \"\"});\r\n        if( employeesSelected == null ){\r\n            this.setState({employeesStateLabel:\"Select at least one employee\"});\r\n            return false;\r\n        }\r\n        this.setState({employeesStateLabel:\"\"});\r\n        if ( empty( ticket_description ) ){\r\n            this.setState({descriptionState:\"required\",descriptionStateLabel:\"Description could not be empty\"});\r\n        }\r\n        this.setState({descriptionState:\"\",descriptionStateLabel:\"\"});\r\n        return true;\r\n    }\r\n    /** before render */\r\n    componentDidMount(){\r\n        this.searchStatus();\r\n        this.searchEmployees();\r\n\r\n        if(this.props.location.state !== undefined){\r\n            this.search(this.props.location.state.ticketId);\r\n        }\r\n    }\r\n    /** vakud date... */\r\n    /*validDate = currentDate => {        \r\n        if ( currentDate < moment() )\r\n            return false;\r\n\r\n        return true;\r\n    }*/\r\n    /** rendering... */\r\n    render(){   \r\n        let {\r\n            ticket_id,\r\n            subject,\r\n            ticket_date,\r\n            ticket_description,\r\n            status_des,\r\n            status,\r\n            employees,\r\n            errorMessage,\r\n            sendRequest,\r\n            messageLabel,\r\n            redirect,\r\n            subjectState,\r\n            subjectStateLabel,\r\n            dateState,\r\n            dateStateLabel,\r\n            statusStateLabel,\r\n            employeesStateLabel,\r\n            descriptionState,\r\n            descriptionStateLabel\r\n        } = this.state;  \r\n        if ( redirect ){\r\n            return <Redirect to={{ pathname : '/ticket/list', state : { newRecord : true } }} />\r\n        }\r\n        if ( ticket_id > 0 ) {\r\n            subjectStateLabel = subject;\r\n            dateStateLabel = ticket_date;\r\n            statusStateLabel = status_des;\r\n            descriptionStateLabel = ticket_description;\r\n        }\r\n        return [\r\n            <Menu select=\"ticket\" key={1} />,\r\n            <div className=\"container-fluid\" key={2}>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            Ticket Form\r\n                        </div>\r\n                        <div className=\"card-body\">                            \r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        { ticket_id > 0 ? <h3>Ticket#{ticket_id}</h3> : \"\" }                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        {\r\n                                            ( ticket_id > 0 ) ? <div className=\"alert alert-info\" role=\"alert\"> You can fill just input that you want modify! </div> : \"\"\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-8 form-group\">\r\n                                        <label>Subject</label>\r\n                                        <input type=\"text\" id=\"subject\" className={`form-control ${subjectState}`} placeholder={subjectStateLabel} onChange={e=>this.change(e)} />\r\n                                    </div>                                    \r\n                                </div>\r\n                                <div className=\"row\">   \r\n                                    <div className=\"col-md-4 form-group\">\r\n                                        <label>Date</label>\r\n                                        <DateTime\r\n                                            inputProps={{                                                \r\n                                                className: `form-control ${dateState}`,\r\n                                                placeholder: `${dateStateLabel}`\r\n                                            }}\r\n                                            /*timeFormat={false}*/\r\n                                            /*dateFormat=\"YYYY-MM-DD h:mm:ss a\"*/\r\n                                            dateFormat=\"YYYY-MM-DD\"\r\n                                            onChange={value=>this.setState({ticket_date : value})}\r\n                                            /*isValidDate={this.validDate}*/\r\n                                            /> \r\n                                    </div>                                 \r\n                                    <div className=\"col-md-4 form-group\">\r\n                                        <label>Status</label>\r\n                                        <Select\r\n                                            className=\"react-select primary\"\r\n                                            classNamePrefix=\"react-select\"\r\n                                            onChange={object => this.setState({ status_id: object.value }) }\r\n                                            options={status}\r\n                                            placeholder={statusStateLabel}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-8 form-group\">\r\n                                        <label>Employee(s)</label>\r\n                                        <Select\r\n                                            className=\"react-select info\"\r\n                                            classNamePrefix=\"react-select\"\r\n                                            placeholder={employeesStateLabel}\r\n                                            closeMenuOnSelect={false}\r\n                                            isMulti\r\n                                            onChange={value => this.setState({ employeesSelected: value }) }\r\n                                            options={employees}\r\n                                        />\r\n                                    </div>                                    \r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-8 form-group\">\r\n                                        <label>Description</label>\r\n                                        <textarea className={`form-control ${descriptionState}`} id=\"ticket_description\" onChange={e=>this.change(e)} rows={5} placeholder={descriptionStateLabel}></textarea>\r\n                                    </div>                                    \r\n                                </div>                                \r\n                                {\r\n                                    ( !sendRequest ) ?\r\n                                    [\r\n                                    <div className=\"row\" key={3}>\r\n                                        <div className=\"col-md-4 form-group\">\r\n                                            <button className=\"btn btn-success buttons\" onClick={this.create}><i className=\"fa fa-plus\"></i> Save</button>\r\n                                            <Link to=\"/ticket/list\" className=\"btn btn-danger buttons buttonMarginLeft\"><i className=\"fa fa-sign-out\"></i> Cancel</Link>\r\n                                        </div>                                            \r\n                                    </div>,\r\n                                    <div className=\"row\" key={4}>\r\n                                        <div className=\"col\">\r\n                                            {\r\n                                                (errorMessage) ?\r\n                                                    <span className=\"text-danger\">{messageLabel}</span>\r\n                                                :\r\n                                                \"\"\r\n                                            }                                                        \r\n                                        </div>\r\n                                    </div>\r\n                                    ]\r\n                                    :\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\r\n                                            <span>Loading please wait...</span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>                                \r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ];\r\n    }\r\n}\r\n\r\nexport default CreateTicket;","import React, { Component } from 'react';\r\nimport Menu from '../Layout/Menu';\r\nimport Select from 'react-select';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { partner, miscellaneous } from '../../api/Path';\r\nimport { request, get } from '../../api/Requestor';\r\nimport { empty, compare, verifyEmail } from '../../form/Validation';\r\n\r\nclass Employee extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            employee_id : 0,\r\n            first_name : \"\",\r\n            last_name : \"\",\r\n            status_id : 0,\r\n            password : \"\",\r\n            confirmPassword : \"\",\r\n            email : \"\",\r\n            userName : \"\",\r\n            status : [],\r\n            employee : { id : 0, first_name : \"\", last_name : \"\", email : \"\", user_name : \"\", password : \"\", status_id : 0, status_des : \"\" },\r\n            firstNameState : \"\",\r\n            firstNameStateLabel : \"Enter a First Name!\",\r\n            lastNameState : \"\",\r\n            lastNameStateLabel : \"Enter a Last Name!\",\r\n            statusStateLabel : \"Select...\",\r\n            emailState : \"\",\r\n            emailStateLabel : \"Enter a valid email!\",\r\n            userNameState : \"\",\r\n            userNameStateLabel : \"Enter a valid User Name\",\r\n            passwordState : \"\",\r\n            passwordStateLabel : \"Enter a valid password\",\r\n            passwordMatch : true,\r\n            sendRequest : false,\r\n            errorMessage : false,\r\n            messageLabel : \"\",\r\n            redirect : false\r\n        }\r\n        this.save = this.save.bind(this);\r\n        this.searchStatus = this.searchStatus.bind(this);\r\n        this.validation = this.validation.bind(this);\r\n        this.searchEmployee = this.searchEmployee.bind(this);\r\n    }\r\n    /** assign values */\r\n    change = element => {\r\n        let key = element.target.id;\r\n        let value = element.target.value;\r\n        this.setState({ [key] : value });\r\n    }\r\n    /** search statuses */\r\n    searchStatus(){\r\n        get(miscellaneous.status)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({status : data});\r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error...\");\r\n            console.log(error);\r\n        });\r\n    }\r\n    /** search employee data */\r\n    searchEmployee(id){\r\n        let param = \"?id=\" + id;\r\n        get(partner.searchEmployee, param)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if ( data != null ){ \r\n                this.setState({\r\n                    employee_id : data.id,\r\n                    first_name : data.first_name,\r\n                    last_name : data.last_name,\r\n                    email : data.email,\r\n                    userName : data.user_name,\r\n                    status_id : data.status_id,                    \r\n                    employee : data\r\n                });\r\n            }\r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error...\");\r\n            console.log(error);\r\n        });\r\n    }\r\n    /** save employee */\r\n    save(){\r\n        let validated = this.validation();\r\n        let {\r\n            employee,\r\n            first_name,\r\n            last_name,\r\n            status_id,\r\n            password,\r\n            email,\r\n            userName            \r\n        } = this.state;\r\n        if ( validated )\r\n        {\r\n            this.setState({sendRequest : true});\r\n            let object = {\r\n                employee_id : employee.id,\r\n                first_name : first_name,\r\n                last_name : last_name,\r\n                status_id : status_id,\r\n                password : password,\r\n                email : email,\r\n                user_name : userName\r\n            }\r\n            request(object, partner.employee)\r\n            .then(response => response.json())\r\n            .then(data => {    \r\n                if ( data.status ) {\r\n                    this.setState({redirect : true});\r\n                } else {\r\n                    this.setState({sendRequest : false, errorMessage: true, messageLabel : data.message });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error...\");\r\n                console.log(error);\r\n                this.setState({sendRequest : false, errorMessage: true, messageLabel : \"Internal Error, please call the administrator\" });\r\n            });\r\n        }\r\n    }\r\n    validation(){\r\n        let {\r\n            first_name,\r\n            last_name,\r\n            status_id,\r\n            password,            \r\n            confirmPassword,\r\n            email,\r\n            userName,\r\n            employee            \r\n        } = this.state;\r\n        if ( empty(first_name) ) {\r\n            this.setState({  firstNameState : \"required\",  firstNameStateLabel : \"First Name could not be empty!\" });\r\n            return false;\r\n        } \r\n        this.setState({  firstNameState : \"\",  firstNameStateLabel : \"\" });\r\n        if ( empty(last_name) ) {\r\n            this.setState({ lastNameState : \"required\", lastNameStateLabel : \"Last Name could not be empty\" });\r\n            return false;\r\n        }\r\n        this.setState({ lastNameState : \"\", lastNameStateLabel : \"\" });\r\n        if ( status_id < 1 ) {\r\n            this.setState({ statusStateLabel : \"Select at least one status\" });\r\n            return false;\r\n        }\r\n        this.setState({ statusStateLabel : \"\" });        \r\n        if ( empty(email) ) {\r\n            this.setState({  emailState : \"required\",  emailStateLabel : \"Email could not be empty\" });\r\n            return false;\r\n        }\r\n        if ( !verifyEmail(email) ) {\r\n            this.setState({  emailState : \"required\",  emailStateLabel : \"Email a valid email\" });\r\n            return false;\r\n        }\r\n        this.setState({  emailState : \"\",  emailStateLabel : \"\" });\r\n        if ( empty(userName) ) {\r\n            this.setState({  userNameState : \"required\",  userNameStateLabel : \"User Name could not be empty\" });\r\n            return false;\r\n        }        \r\n        this.setState({  userNameState : \"\",  userNameStateLabel : \"\" });\r\n        if( !empty(password) ) {\r\n            this.setState({ passwordState : \"\", passwordStateLabel : \"\" });\r\n            if ( !compare(password,confirmPassword) ) {\r\n                this.setState({ passwordMatch : false }); \r\n                return false;\r\n            } else {\r\n                this.setState({ passwordMatch : true, errorMessage : false }); \r\n            }\r\n        } else {\r\n            /** it is updating, dont valid this */\r\n            if ( employee.id < 1 ) {\r\n                this.setState({ passwordState : \"required\", passwordStateLabel : \"Please Enter the password\" });\r\n                return false;\r\n            }\r\n        }   \r\n        return true;     \r\n    }\r\n    /** before render */\r\n    componentDidMount(){\r\n        this.searchStatus();\r\n        if ( this.props.location.state !== undefined ) {\r\n            this.searchEmployee(this.props.location.state.employee_id);\r\n        }\r\n    }\r\n    /** render view */\r\n    render(){        \r\n        let { \r\n            status, \r\n            firstNameState,\r\n            firstNameStateLabel,\r\n            lastNameState,\r\n            lastNameStateLabel,\r\n            emailState,\r\n            emailStateLabel,\r\n            userNameState,\r\n            userNameStateLabel,\r\n            statusStateLabel,\r\n            passwordState,\r\n            passwordStateLabel,\r\n            passwordMatch,\r\n            sendRequest,\r\n            errorMessage,\r\n            messageLabel,\r\n            redirect,\r\n            employee\r\n        } = this.state;\r\n        if ( redirect ) {\r\n            return <Redirect to={{ pathname : '/employee/list', state : { newRecord : true } }} />\r\n        }\r\n        if( employee.id > 0 ) {\r\n            firstNameStateLabel = employee.first_name;\r\n            lastNameStateLabel = employee.last_name;\r\n            emailStateLabel = employee.email;\r\n            userNameStateLabel = employee.user_name;\r\n            statusStateLabel = employee.status_des;            \r\n        }\r\n        return [\r\n            <Menu select=\"employee\" key={1} />,\r\n            <div className=\"container-fluid\" key={2}>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                Employee Form\r\n                            </div>\r\n                            <div className=\"card-body\"> \r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        {\r\n                                            ( employee.id > 0 ) ? <div className=\"alert alert-info\" role=\"alert\"> You can fill just input that you want modify! </div> : \"\"\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <form>\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">                                            \r\n                                            <div className=\"form-group col-sm-6\">\r\n                                                <label>First Name</label>\r\n                                                <input type=\"text\" id=\"first_name\" className={`form-control ${firstNameState}`} placeholder={firstNameStateLabel} onChange={e=>this.change(e)} />\r\n                                            </div>             \r\n                                        </div>\r\n                                        <div className=\"row\">                                            \r\n                                            <div className=\"form-group col-sm-6\">\r\n                                                <label>Last Name</label>\r\n                                                <input type=\"text\" id=\"last_name\" className={`form-control ${lastNameState}`} placeholder={lastNameStateLabel} onChange={e=>this.change(e)} />\r\n                                            </div>             \r\n                                        </div>\r\n                                        <div className=\"row\">                                            \r\n                                            <div className=\"form-group col-sm-6\">\r\n                                                <label>Email</label>\r\n                                                <input type=\"email\" id=\"email\" className={`form-control ${emailState}`} placeholder={emailStateLabel} onChange={e=>this.change(e)} />\r\n                                            </div>             \r\n                                        </div>\r\n                                        <div className=\"row\">                                            \r\n                                            <div className=\"form-group col-sm-6\">\r\n                                                <label>User Name</label>\r\n                                                <input type=\"text\" id=\"userName\" className={`form-control ${userNameState}`} placeholder={userNameStateLabel} onChange={e=>this.change(e)} />\r\n                                            </div>             \r\n                                        </div>\r\n                                        <div className=\"row\">                                            \r\n                                            <div className=\"form-group col-sm-6\">\r\n                                                <label>Status</label>\r\n                                                <Select\r\n                                                    className=\"react-select primary\"\r\n                                                    classNamePrefix=\"react-select\"\r\n                                                    id=\"status_id\"                                                    \r\n                                                    onChange={object => this.setState({ status_id: object.value }) }\r\n                                                    options={status}\r\n                                                    placeholder={statusStateLabel}\r\n                                                />\r\n                                            </div>\r\n                                        </div>                                        \r\n                                        <div className=\"row\">                                            \r\n                                            <div className=\"form-group col-sm-6\">\r\n                                                <label>Password</label>\r\n                                                <input type=\"password\" id=\"password\" className={`form-control ${passwordState}`} placeholder={`${passwordStateLabel}`} onChange={e=>this.change(e)} />\r\n                                            </div>             \r\n                                        </div>\r\n                                        <div className=\"row\">                                            \r\n                                            <div className=\"form-group col-sm-6\">\r\n                                                <label>Confirm Password</label>\r\n                                                <input type=\"password\" id=\"confirmPassword\" className=\"form-control\" onChange={e=>this.change(e)} />\r\n                                                {\r\n                                                 ( !passwordMatch ) ? [<br key={3} />,<span className=\"text-danger\" key={4}>Password does not match</span>] : null\r\n                                                }                                                \r\n                                            </div>             \r\n                                        </div>\r\n                                        {\r\n                                             ( !sendRequest ) ?\r\n                                                [\r\n                                                <div className=\"row\" key={5}>\r\n                                                    <div className=\"col-md-4 form-group\">\r\n                                                        <button type=\"button\" className=\"btn btn-success buttons\" onClick={this.save}><i className=\"fa fa-check\"></i> Save</button>\r\n                                                        <Link to=\"/employee/list\" className=\"btn btn-danger buttons buttonMarginLeft\"><i className=\"fa fa-sign-out\"></i> Cancel</Link>                                                \r\n                                                    </div>                                            \r\n                                                </div>,\r\n                                                <div className=\"row\" key={6}>\r\n                                                    <div className=\"col\">\r\n                                                        {\r\n                                                            (errorMessage) ?\r\n                                                                <span>{messageLabel}</span>\r\n                                                            :\r\n                                                            \"\"\r\n                                                        }                                                        \r\n                                                    </div>\r\n                                                </div>\r\n                                                ]\r\n                                            :\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col\">\r\n                                                        <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\r\n                                                        <span>Loading please wait...</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                        }                                                                                \r\n                                    </div> \r\n                                </form>                   \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n        ];\r\n    }\r\n}\r\n\r\nexport default Employee;","import React, { Component } from 'react';\r\nimport Menu from '../Layout/Menu';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { exec, get } from '../../api/Requestor';\r\nimport { partner } from '../../api/Path';\r\n\r\nclass Employees extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            employees : [],\r\n            editEmployee : false,\r\n            viewEmployee : false,\r\n            employeeId : 0\r\n        }\r\n        this.searchEmployees = this.searchEmployees.bind(this);\r\n    }\r\n    /** search all employees that not removed */\r\n    searchEmployees(){\r\n        get(partner.searchEmployees)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({employees : data});\r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error...\");\r\n            console.log(error);\r\n        });\r\n    }\r\n    remove = key => {\r\n        let param = \"?employee=\"+key;\r\n        let response = window.confirm(\"Are you sure?\");\r\n        if ( response == true ) {\r\n            exec(partner.remove, param)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if ( data.status ) {\r\n                    this.searchEmployees();\r\n                } else {\r\n                    window.alert(data.message);\r\n                }\r\n            })\r\n            .catch(error=>{\r\n                console.log(\"Error...\");\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n    /** edit an employee */\r\n    edit = employee => {\r\n        this.setState({employeeId : employee, editEmployee : true});\r\n    }\r\n    /** view an employee */\r\n    view = employee => {\r\n        this.setState({employeeId : employee, viewEmployee : true});\r\n    }\r\n    /** before render */\r\n    componentDidMount(){\r\n       this.searchEmployees();\r\n    }\r\n    /** rendering... */\r\n    render(){     \r\n        let { employees, employeeId, editEmployee, viewEmployee } = this.state,\r\n            newEmployee = false,\r\n            ref = this;\r\n        if ( editEmployee ) {\r\n            return <Redirect to={{pathname : \"/employee\", state : {employee_id : employeeId} }} />\r\n        }\r\n        if ( viewEmployee ) {\r\n            return <Redirect to={{pathname : \"/view/employee\", state : {employee_id : employeeId} }} />\r\n        }\r\n        if ( this.props.location.state !== undefined ) \r\n            newEmployee = this.props.location.state.newRecord;\r\n        return [\r\n                <Menu select=\"employee\" key={1} />,\r\n                <div className=\"container-fluid\" key={2}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                List of Employees\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            {\r\n                                                ( newEmployee ) ? <div className=\"alert alert-success\" role=\"alert\">New Employee has been created!</div> : \"\"\r\n                                            }                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <Link to=\"/employee\" className=\"btn btn-primary buttons float-right\"><i className=\"fa fa-plus\"></i> Create Employee</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col table-responsive\">\r\n                                            <table className=\"table table-condensed table-bordered\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>First Name</th>\r\n                                                        <th>Last Name</th>\r\n                                                        <th>Email</th>\r\n                                                        <th>User Name</th>\r\n                                                        <th>Created on</th>\r\n                                                        <th>Created by</th>\r\n                                                        <th>Status</th>\r\n                                                        <th>Actions</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        employees.map(function(element,index){\r\n                                                            return (\r\n                                                                <tr key={index}>\r\n                                                                    <td>{index + 1}</td>\r\n                                                                    <td>{element.first_name}</td>\r\n                                                                    <td>{element.last_name}</td>\r\n                                                                    <td>{element.email}</td>\r\n                                                                    <td>{element.user_name}</td>\r\n                                                                    <td>{element.created_on}</td>\r\n                                                                    <td>{element.created_by}</td>\r\n                                                                    <td>{element.status_des}</td>\r\n                                                                    <td>\r\n                                                                        <i className=\"fa fa-eye actionIcon\" title=\"View Employee\" onClick={e=>ref.view(element.id)}></i>\r\n                                                                        <i className=\"fa fa-pencil-square-o actionIcon\" title=\"Edit Employee\" onClick={e=>ref.edit(element.id)}></i>\r\n                                                                        <i className=\"fa fa-trash actionIcon\" title=\"Remove Employee\" onClick={e=>ref.remove(element.id)}></i>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>                                \r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ];\r\n    }\r\n}\r\n\r\nexport default Employees;","import React, { Component } from 'react';\r\nimport Menu from '../Layout/Menu';\r\nimport DateTime from 'react-datetime';\r\nimport { report } from '../../api/Path';\r\nimport { request } from '../../api/Requestor';\r\n\r\nclass Report extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            date_from : \"\",\r\n            date_to : \"\",\r\n            entries : []\r\n        }\r\n    }\r\n    search = value => {\r\n        let {\r\n            date_from,\r\n            date_to\r\n        } = this.state;\r\n        if ( date_from.length === undefined && date_to.length === undefined ) {\r\n            // let params = '?date_from='+date_from+'&date_to='+date_to;\r\n            let params = {\r\n                date_from : date_from,\r\n                date_to : date_to\r\n            }\r\n            request(params,report.entries)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if ( res != null ){\r\n                    this.setState({entries: res});\r\n                } else {\r\n                    window.alert(\"Response does not found\");\r\n                }\r\n            })\r\n            .catch(error=>{\r\n                console.log(\"Error...\");\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n    render(){    \r\n        let { entries } = this.state,\r\n            totalHour = 0;    \r\n        return [\r\n                <Menu select=\"reports\" key={1} />,\r\n                <div className=\"container-fluid\" key={2}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                Generate Report\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-4 form-group\">\r\n                                            <DateTime\r\n                                                inputProps={{\r\n                                                    className: \"form-control float-right\",\r\n                                                    placeholder: \"Datetime Picker Here\"\r\n                                                }}\r\n                                                timeFormat={false}\r\n                                                dateFormat=\"YYYY-MM-DD\"\r\n                                                onChange={value=>this.setState({date_from : value})}\r\n                                                /> \r\n                                        </div>                               \r\n                                        <div className=\"col-md-1 form-group\">\r\n                                            <label className=\"text-center\">To</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-4 form-group\">\r\n                                            <DateTime\r\n                                                inputProps={{\r\n                                                    className: \"form-control float-right\",\r\n                                                    placeholder: \"Datetime Picker Here\"\r\n                                                }}\r\n                                                timeFormat={false}\r\n                                                dateFormat=\"YYYY-MM-DD\"\r\n                                                onChange={value=>this.setState({date_to : value})}\r\n                                                /> \r\n                                        </div>         \r\n                                        <div className=\"col-md-2 form-group\">\r\n                                            <button className=\"btn btn-primary float-right\" onClick={this.search}>Generate</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <table className=\"table table-condensed table-bordered\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>Ticket#</th>\r\n                                                        <th>Employee</th>\r\n                                                        <th>Note</th>\r\n                                                        <th>Date Start</th>\r\n                                                        <th>Date End</th>\r\n                                                        <th>Hours</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        entries.map(function(element,index){\r\n                                                            {\r\n                                                                totalHour += parseInt( element.hour_diff )\r\n                                                            }\r\n                                                            return (\r\n                                                                <tr key={index}>\r\n                                                                    <td>{element.ticket_id}</td>\r\n                                                                    <td>{element.employee_name}</td>\r\n                                                                    <td>{element.note}</td>\r\n                                                                    <td>{element.date_from}</td>\r\n                                                                    <td>{element.date_to}</td>\r\n                                                                    <td>{element.hour_diff}</td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                                <tfoot>\r\n                                                    <tr>\r\n                                                        <th colSpan=\"5\" className=\"text-right\">Total</th>\r\n                                                        <th className=\"text-center\">{totalHour}</th>\r\n                                                    </tr>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>                                \r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ];\r\n    }\r\n}\r\n\r\nexport default Report;","import React, { Component } from 'react';\r\nimport Menu from '../Layout/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport { partner } from '../../api/Path';\r\nimport { get } from '../../api/Requestor';\r\n\r\nclass ViewEmployee extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            first_name : \"\",\r\n            last_name : \"\",\r\n            email : \"\",\r\n            user_name : \"\",\r\n            status_des : \"\"\r\n        }\r\n        this.searchEmployee = this.searchEmployee.bind(this);\r\n    }\r\n    /** search employee data */\r\n    searchEmployee(id){\r\n        let param = \"?id=\" + id;\r\n        get(partner.searchEmployee, param)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if ( data != null ){ \r\n                this.setState({\r\n                    first_name : data.first_name,\r\n                    last_name : data.last_name,\r\n                    email : data.email,\r\n                    user_name : data.user_name,\r\n                    status_des : data.status_des\r\n                });\r\n            }\r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error...\");\r\n            console.log(error);\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        if ( this.props.location.state !== undefined ) {\r\n            this.searchEmployee(this.props.location.state.employee_id);\r\n        }\r\n    }\r\n    render(){\r\n        let { \r\n            first_name,\r\n            last_name,\r\n            email,\r\n            user_name,\r\n            status_des\r\n         } = this.state;\r\n        return [\r\n            <Menu select=\"employee\" key={1} />,\r\n            <div className=\"container-fluid\" key={2}>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                Employee View\r\n                            </div>\r\n                            <div className=\"card-body\"> \r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <h3 className=\"capitalize\">{first_name}</h3>\r\n                                        <label>First Name</label>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <h3 className=\"capitalize\">{last_name}</h3>\r\n                                        <label>Last Name</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <h3 className=\"lowercase\">{email}</h3>\r\n                                        <label>Email</label>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <h3 className=\"uppercase\">{user_name}</h3>\r\n                                        <label>User Name</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <h3 className=\"capitalize\">{status_des}</h3>\r\n                                        <label>Status</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4 form-group\">\r\n                                        <Link to=\"/employee/list\" className=\"btn btn-danger buttons buttonMarginLeft\"><i className=\"fa fa-sign-out\"></i> Back</Link> \r\n                                    </div>                                            \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ];\r\n    }\r\n}\r\n\r\nexport default ViewEmployee;","import React, { Component } from 'react';\r\nimport { ticket } from '../../api/Path';\r\nimport { get } from '../../api/Requestor';\r\n\r\nclass TicketInfoHead extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            ticketInfo : {\r\n                            id : 0, \r\n                            subject : \"\",\r\n                            ticket_date : \"\", \r\n                            ticket_date_format : \"\", \r\n                            created_on : \"\", \r\n                            status_id : 0,\r\n                            status_des : \"\", \r\n                            created_by : \"\", \r\n                            description : \"\"\r\n                        }\r\n        }\r\n        this.search = this.search.bind(this);\r\n    }\r\n    search(ticketId){\r\n        let param = \"?ticket=\" + ticketId;\r\n        get(ticket.get,param)\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            if( data != null){\r\n                this.setState({ticketInfo:data});\r\n            }\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n            window.alert(\"Internal Error, please call the administrator\");\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let { ticketId } = this.props;\r\n        if ( ticketId !== undefined ){\r\n            this.search(ticketId);\r\n        }\r\n    }\r\n    render(){\r\n        let { ticketInfo } = this.state;\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <table className=\"table table-condensed\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Ticket#:</td>\r\n                                    <td>{ticketInfo.id}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Subject:</td>\r\n                                    <td>{ticketInfo.subject}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Date:</td>\r\n                                    <td>{ticketInfo.ticket_date_format}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Status:</td>\r\n                                    <td>{ticketInfo.status_des}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Created by:</td>\r\n                                    <td>{ticketInfo.created_by}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Created on:</td>\r\n                                    <td>{ticketInfo.created_on}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"2\">Description</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"2\">{ticketInfo.description}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TicketInfoHead;","import React, {Component} from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { ticket } from '../../api/Path';\r\nimport { get } from '../../api/Requestor';\r\n\r\nclass TicketInfoFoot extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            employees : [],\r\n            entries : [],\r\n            showTab : \"time-entries-tab\",\r\n            viewEmployee : false,\r\n            employeeId : 0\r\n        }\r\n        this.searchEmployees = this.searchEmployees.bind(this);\r\n        this.searchEntries = this.searchEntries.bind(this);\r\n    }\r\n    /** search employee list */\r\n    searchEmployees(ticketId){\r\n        let param = \"?ticket=\" + ticketId;\r\n        get(ticket.employees,param)\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            if( data != null){\r\n                this.setState({employees:data});\r\n            }\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n            window.alert(\"Internal Error, please call the administrator\");\r\n        })\r\n    }\r\n    /** search employee list */\r\n    searchEntries(ticketId){\r\n        let param = \"?ticket=\" + ticketId;\r\n        get(ticket.entries,param)\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            if( data != null){\r\n                this.setState({entries:data});\r\n            }\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n            window.alert(\"Internal Error, please call the administrator\");\r\n        })\r\n    }\r\n    /** before render... */\r\n    componentDidMount(){\r\n        let { ticketId } = this.props;\r\n        if ( ticketId !== undefined ){\r\n            this.searchEmployees(ticketId);\r\n            this.searchEntries(ticketId);\r\n        }\r\n    }\r\n    /** change view tab */\r\n    change = event => {\r\n        event.preventDefault();\r\n        this.setState({showTab : event.target.id});\r\n    }\r\n    /** remove employee action */\r\n    removeEmployee = assignId => {\r\n        let param = \"?record_id=\" + assignId;\r\n        get(ticket.removeAssigned,param)\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            if( data != null){\r\n                if ( data.status )\r\n                    this.setState({employees:data.employees});\r\n                else\r\n                    window.alert(data.message);\r\n            } else {\r\n                window.alert(\"Response does not found\");\r\n            }\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n            window.alert(\"Internal Error, please call the administrator\");\r\n        })\r\n    }\r\n    /** remove employee action */\r\n    removeEntry = assignId => {\r\n        let param = \"?record_id=\" + assignId;\r\n        get(ticket.removeEntry,param)\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            if( data != null){\r\n                if ( data.status )\r\n                    this.setState({entries:data.entries});\r\n                else\r\n                    window.alert(data.message);\r\n            } else {\r\n                window.alert(\"Response does not found\");\r\n            }\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n            window.alert(\"Internal Error, please call the administrator\");\r\n        })\r\n    }\r\n    view = employee => {\r\n        this.setState({employeeId : employee, viewEmployee : true});\r\n    }\r\n    render(){\r\n        let {\r\n            employees,\r\n            entries,\r\n            showTab,\r\n            viewEmployee,\r\n            employeeId\r\n        } = this.state,\r\n        {\r\n            updating\r\n        } = this.props,\r\n        ref = this;\r\n        if ( viewEmployee ) {\r\n            return <Redirect to={{pathname : \"/view/employee\", state : {employee_id : employeeId} }} />\r\n        }\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n                            <li className=\"nav-item\">                            \r\n                                <a onClick={e=>ref.change(e)} className={ showTab === \"time-entries-tab\" ? \"nav-link active\" : \"nav-link\" } id=\"time-entries-tab\" data-toggle=\"tab\" href=\"#time-entries\" role=\"tab\" aria-controls=\"time-entries\" aria-selected=\"true\">\r\n                                    Time Entries\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a onClick={e=>ref.change(e)} className={ showTab === \"employees-tab\" ? \"nav-link active\" : \"nav-link\" } id=\"employees-tab\" data-toggle=\"tab\" href=\"#employees\" role=\"tab\" aria-controls=\"employees\" aria-selected=\"false\">\r\n                                    Employees\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"tab-content padding\" id=\"myTabContent\">\r\n                            <div className={ showTab === \"time-entries-tab\" ? \"tab-pane fade show active\" : \"tab-pane fade\" } id=\"time-entries\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col table-response\">\r\n                                            <table className=\"table table-bordered table-condensed\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>Employee</th>\r\n                                                        <th>Created on</th>\r\n                                                        <th>Note</th>\r\n                                                        <th>{ updating !== false ? \"Action\" : \"-\"}</th>                                                        \r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        entries.map(function(element,index){\r\n                                                            return (\r\n                                                                <tr key={index}>\r\n                                                                    <td>{element.employee_name}</td>\r\n                                                                    <td>{element.created_on}</td>\r\n                                                                    <td>{element.note}</td>\r\n                                                                    <td>{ updating !== false ? (<div><i className=\"fa fa-trash actionIcon\" onClick={e=>ref.removeEntry(element.id)}></i></div>) : \"-\" }</td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={ showTab === \"employees-tab\" ? \"tab-pane fade show active\" : \"tab-pane fade\" } id=\"employees\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col table-response\">\r\n                                            <table className=\"table table-bordered table-condensed\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>First Name</th>\r\n                                                        <th>Last Name</th>\r\n                                                        <th>Email</th>\r\n                                                        <th>{ updating !== false ? \"Action\" : \"-\"}</th>                                                                                                                \r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        employees.map(function(element,index){\r\n                                                            return (\r\n                                                                <tr key={index}>\r\n                                                                    <td>{element.first_name}</td>\r\n                                                                    <td>{element.last_name}</td>\r\n                                                                    <td>{element.email}</td>\r\n                                                                    <td>{ updating !== false ? (<div><i className=\"fa fa-eye actionIcon\" onClick={e=>ref.view(element.employee_id)}></i><i className=\"fa fa-trash actionIcon\" onClick={e=>ref.removeEmployee(element.id)}></i></div>) : \"-\" }</td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>                                \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                   <div className=\"col\">\r\n                        <Link to=\"/ticket/list\" className=\"btn btn-danger buttons buttonMarginLeft\"><i className=\"fa fa-sign-out\"></i> Cancel</Link>\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TicketInfoFoot;","import React, { Component } from 'react';\r\nimport TicketInfoHead from './TicketInfoHead';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Menu from '../Layout/Menu';\r\nimport TicketInfoFoot from './TIcketInfoFoot';\r\nimport { ticket } from '../../api/Path';\r\nimport { get } from '../../api/Requestor';\r\n\r\nclass TicketView extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            redirect : false,\r\n            ticketId : 0,\r\n            redirectToEdit : false\r\n        }\r\n    }\r\n    /** remove ticket */\r\n    remove = ticketId =>{\r\n        let confirm = window.confirm(\"are you sure?\");\r\n        if ( confirm ){\r\n            let param = \"?ticket=\" + ticketId;\r\n            get(ticket.remove,param)\r\n            .then(response=>response.json())\r\n            .then(data=>{\r\n                if( data != null){\r\n                    if ( data.status )\r\n                        this.setState({redirect:true});\r\n                    else\r\n                        window.alert(data.message);\r\n                } else {\r\n                    window.alert(\"Response does not found\");\r\n                }\r\n            })\r\n            .catch(error=>{\r\n                console.log(error);\r\n                window.alert(\"Internal Error, please call the administrator\");\r\n            })\r\n        }\r\n    }\r\n    edit = ticket => {\r\n        this.setState({ticketId : ticket, redirectToEdit: true});\r\n    }\r\n    /** rendering.... */\r\n    render(){\r\n        let ticketId = 0,\r\n        updating = false,\r\n        ref = this,\r\n        {\r\n            redirect,\r\n            redirectToEdit\r\n        } = this.state;\r\n        if(this.props.location.state !== undefined){\r\n            ticketId = this.props.location.state.ticket;\r\n            updating = this.props.location.state.updating;\r\n        }        \r\n        if ( ticketId === 0 ) {\r\n            return <Redirect to='/ticket/list' />\r\n        }\r\n        if ( redirect ) {\r\n            return <Redirect to='/ticket/list' />\r\n        }\r\n        if ( redirectToEdit ) {\r\n            return <Redirect to={{ pathname : '/ticket', state : { ticketId : ticketId } }} />\r\n        }\r\n        return [\r\n            <Menu select=\"ticket\" key={1} />,\r\n            <div className=\"container-fluid\" key={2}>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        {\r\n                            updating === true ?\r\n                            <div className=\"padding\">\r\n                                <button className=\"btn btn-success actionButton\" onClick={e=>ref.edit(ticketId)}><i className=\"fa fa-edit\"></i> Edit</button>\r\n                                <button className=\"btn btn-danger\" onClick={e=>ref.remove(ticketId)}><i className=\"fa fa-trash\"></i> Delete</button>\r\n                            </div>\r\n                            :\r\n                            \"\"\r\n                        }                        \r\n                    </div>\r\n                </div>\r\n            </div>,\r\n            <TicketInfoHead ticketId={ticketId} key={3} />,\r\n            <TicketInfoFoot ticketId={ticketId} updating={updating} key={4} />\r\n        ];\r\n    }\r\n}\r\n\r\nexport default TicketView;","import React, { Component } from 'react';\r\nimport Menu from '../Layout/Menu';\r\nimport DateTime from 'react-datetime';\r\nimport Select from 'react-select';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { ticket } from '../../api/Path';\r\nimport { request, get } from '../../api/Requestor';\r\nimport TicketInfoHead from './TicketInfoHead';\r\n\r\nclass TimeEntry extends Component {    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            employee_id : 0,\r\n            date_from : \"\",\r\n            date_to : \"\",\r\n            note : \"\",\r\n            employees : [],\r\n            redirect : false,\r\n            sendRequest : false,\r\n            errorMessage : false,\r\n            messageLabel : \"\"\r\n        }\r\n        this.searchEmployees = this.searchEmployees.bind(this);\r\n        this.create = this.create.bind(this);\r\n    }  \r\n    /** assign values */\r\n    change = element => {\r\n        let key = element.target.id;\r\n        let value = element.target.value;\r\n        this.setState({ [key] : value });\r\n    } \r\n    /** search all employees that not removed */\r\n    searchEmployees(ticketId){\r\n        let params = '?ticket=' + ticketId;\r\n        get(ticket.employeeOptions, params)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if ( data != null )\r\n                this.setState({employees : data});\r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error...\");\r\n            console.log(error);\r\n        });\r\n    } \r\n    /** create entry */\r\n    create(){\r\n        let {\r\n            employee_id,\r\n            date_from,  \r\n            date_to,\r\n            note\r\n        } = this.state\r\n        let object = {\r\n            ticket_id : this.props.location.state.ticket,\r\n            employee_id : employee_id,\r\n            date_from : date_from,\r\n            date_to : date_to,\r\n            note : note\r\n        }\r\n        request(object, ticket.createEntry)\r\n        .then(response => response.json())\r\n        .then(data => {    \r\n            if ( data.status ) {\r\n                this.setState({redirect : true});\r\n            } else {\r\n                this.setState({sendRequest : false, errorMessage: true, messageLabel : data.message });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Error...\");\r\n            console.log(error);\r\n            this.setState({sendRequest : false, errorMessage: true, messageLabel : \"Internal Error, please call the administrator\" });\r\n        });\r\n    }\r\n    /** before render */\r\n    componentDidMount(){\r\n        if ( this.props.location.state !== undefined ) {\r\n            this.searchEmployees(this.props.location.state.ticket);   \r\n        }        \r\n    }\r\n    /** rendering... */\r\n    render(){ \r\n        if ( this.props.location.state == undefined ) {\r\n            return <Redirect to='/ticket/list' />\r\n        }        \r\n        let {\r\n            employees,\r\n            errorMessage,\r\n            sendRequest,\r\n            messageLabel,\r\n            redirect\r\n        } = this.state;    \r\n        if ( redirect ){\r\n            return <Redirect to={{ pathname : '/ticket/list', state : { newRecord : true } }} />\r\n        }\r\n        return [\r\n            <Menu select=\"ticket\" key={1} />,\r\n            <div className=\"container-fluid\" key={2}>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            Ticket Entry Form\r\n                        </div>\r\n                        <div className=\"card-body\">                            \r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\"><div className=\"col\"><h3>Ticket Information</h3></div></div>,\r\n                                <TicketInfoHead ticketId={this.props.location.state.ticket} key={3} />\r\n                                <div className=\"row\"><div className=\"col\"><h3>Time Entry Information</h3></div></div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-8 form-group\">\r\n                                        <label>Employee</label>\r\n                                        <Select\r\n                                            className=\"react-select primary\"\r\n                                            classNamePrefix=\"react-select\"\r\n                                            onChange={object => this.setState({ employee_id: object.value }) }\r\n                                            options={employees}\r\n                                            placeholder=\"Select Employee...\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4 form-group\">\r\n                                        <label>Date</label>\r\n                                        <DateTime\r\n                                            inputProps={{\r\n                                                className: \"form-control\",\r\n                                                placeholder: \"Datetime Picker Here\"\r\n                                            }}\r\n                                            dateFormat=\"YYYY-MM-DD\"\r\n                                            onChange={value=>this.setState({date_from : value})}\r\n                                            /> \r\n                                    </div>\r\n                                    <div className=\"col-md-4 form-group\">\r\n                                        <label>To</label>\r\n                                        <DateTime\r\n                                            inputProps={{\r\n                                                className: \"form-control\",\r\n                                                placeholder: \"Datetime Picker Here\"\r\n                                            }}\r\n                                            dateFormat=\"YYYY-MM-DD\"\r\n                                            onChange={value=>this.setState({date_to : value})}\r\n                                            /> \r\n                                    </div>\r\n                                </div>                                \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-8 form-group\">\r\n                                        <label>Note</label>\r\n                                        <textarea id=\"note\" className=\"form-control\" rows={5} onChange={e=>this.change(e)}></textarea>\r\n                                    </div>                                    \r\n                                </div>                                \r\n                                {\r\n                                    ( !sendRequest ) ?\r\n                                    [\r\n                                    <div className=\"row\" key={3}>\r\n                                        <div className=\"col-md-4 form-group\">\r\n                                            <button className=\"btn btn-success buttons\" onClick={e=>this.create()}>Save</button>\r\n                                            <Link to=\"/ticket/list\" className=\"btn btn-danger buttons buttonMarginLeft\"><i className=\"fa fa-sign-out\"></i> Cancel</Link>\r\n                                        </div>                                            \r\n                                    </div>,\r\n                                    <div className=\"row\" key={4}>\r\n                                        <div className=\"col\">\r\n                                            {\r\n                                                (errorMessage) ?\r\n                                                    <span className=\"text-danger\">{messageLabel}</span>\r\n                                                :\r\n                                                \"\"\r\n                                            }                                                        \r\n                                        </div>\r\n                                    </div>\r\n                                    ]\r\n                                    :\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\r\n                                            <span>Loading please wait...</span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>                                \r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ];\r\n    }\r\n}\r\n\r\nexport default TimeEntry;","import Ticket from \"../components/Dashboard/Ticket\";\r\nimport CreateTicket from \"../components/Dashboard/CreateTicket\";\r\nimport Employee from \"../components/Dashboard/Employee\";\r\nimport Employees from \"../components/Dashboard/Employees\";\r\nimport Report from \"../components/Dashboard/Report\";\r\nimport ViewEmployee from \"../components/Dashboard/ViewEmployee\";\r\nimport TicketView from \"../components/Dashboard/TicketView\";\r\nimport TimeEntry from \"../components/Dashboard/TimeEntry\";\r\nimport Login from \"../components/Entry/Login\";\r\n\r\nconst routes = [\r\n    {\r\n        path : '/',\r\n        component : Login\r\n    },\r\n    {\r\n        path : '/ticket/list',\r\n        component : Ticket\r\n    },\r\n    {\r\n        path : '/ticket/entries',\r\n        component : TimeEntry\r\n    },\r\n    {\r\n        path : '/ticket',\r\n        component : CreateTicket\r\n    },\r\n    {\r\n        path : '/ticket/view',\r\n        component : TicketView\r\n    },\r\n    {\r\n        path : '/employee/list',\r\n        component : Employees\r\n    },    \r\n    {\r\n        path : '/employee',\r\n        component : Employee\r\n    },\r\n    {\r\n        path : '/view/employee',\r\n        component : ViewEmployee\r\n    },\r\n    {\r\n        path : '/report',\r\n        component : Report\r\n    }    \r\n];\r\n\r\nexport default routes;","import React, { Component } from 'react';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport { partner } from '../../api/Path';\r\nimport { get } from '../../api/Requestor';\r\n\r\nclass Login extends Component {\r\n    /** constructor */\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user_name : \"\",\r\n            password : \"\",\r\n            redirect : false\r\n        }\r\n        this.logIn = this.logIn.bind(this);\r\n        this.validSessionId = this.validSessionId.bind(this);\r\n    }\r\n    /** assign values */\r\n    change = element => {\r\n        let key = element.target.id;\r\n        let value = element.target.value;\r\n        this.setState({ [key] : value });\r\n    }\r\n    /** log in */\r\n    logIn(){\r\n        let {\r\n            user_name,\r\n            password\r\n        } = this.state;\r\n        let params = \"?user=\"+user_name+\"&pass=\"+password;\r\n        get(partner.logIn, params)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if ( data != null ){\r\n                if ( data.status ) {\r\n                    sessionStorage.setItem('sessionId', data.sessionId);\r\n                    this.setState({redirect : true});\r\n                } else {\r\n                    window.alert(\"You don't have permission!\");\r\n                }\r\n            } else {\r\n                window.alert(\"Data does not found!\");\r\n            }            \r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error...\");\r\n            console.log(error);\r\n        });\r\n    }\r\n    validSessionId(){\r\n        let sessionId = sessionStorage.getItem(\"sessionId\");\r\n        if ( sessionId !== 'undefined' ) {\r\n            let params = \"?session=\" + sessionId;\r\n            get(partner.validSessionId, params)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if ( data != null ){\r\n                    if ( data.status ) {\r\n                        this.setState({redirect : true});\r\n                    }\r\n                }            \r\n            })\r\n            .catch(error=>{\r\n                console.log(\"Error...\");\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.validSessionId();\r\n    }\r\n    /** rendering... */\r\n    render(){\r\n        let { redirect } = this.state;        \r\n        if ( redirect ) {\r\n            return <Redirect to='/ticket/list' />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5 offset-md-3 marginTop\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                Login\r\n                            </div>\r\n                            <div className=\"card-body\"> \r\n                                <form>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group col-md-12\">\r\n                                            <label>Username/Email</label>\r\n                                            <input type=\"text\" id=\"user_name\" onChange={e=>this.change(e)} className=\"form-control\" placeholder=\"Enter User Name or email\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group col-md-12\">\r\n                                            <label>Password</label>\r\n                                            <input type=\"password\" id=\"password\" onChange={e=>this.change(e)} className=\"form-control\" placeholder=\"Enter your password\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-4 form-group\">\r\n                                            <button className=\"btn btn-success buttons\" onClick={e=>this.logIn()}>Enter</button>\r\n                                        </div>                                    \r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NotFound extends Component{\r\n    render(){\r\n        return (\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                Link unreachable! <br />\r\n                <Link to=\"/ticket/list\" className=\"btn btn-danger buttons buttonMarginLeft\"><i className=\"fa fa-sign-out\"></i> Back</Link> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport { Route, Switch, HashRouter } from 'react-router-dom';\r\nimport routes from './router/Routes';\r\nimport NotFound from './components/Dashboard/NotFound';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          {\r\n            routes.map(function(e,i){\r\n              return <Route exact path={e.path} component={e.component} key={i} />\r\n            })\r\n          }\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './vendor/css/bootstrap.min.css';\r\nimport './vendor/css/react-datetime.css';\r\nimport './vendor/css/font-awesome.min.css';\r\n// import './vendor/css/tempusdominus-bootstrap-4.min.css';\r\n// import './vendor/js/jquery-3.3.1.min.js';\r\n// import './vendor/js/moment.js';\r\n// import './vendor/js/tempusdominus-bootstrap-4.min.js';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}